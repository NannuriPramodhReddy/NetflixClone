{"ast":null,"code":"// src/api.js\n\nimport axios from 'axios';\n\n// Set your backend URL here\nconst API_URL = 'http://localhost:5000/api'; // Replace with your actual API URL\n\n// Function to login user\nexport const loginUser = async (email, password) => {\n  try {\n    const response = await axios.post(`${API_URL}/auth/login`, {\n      email,\n      password\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error('Login failed');\n  }\n};\n\n// Function to register user\nexport const registerUser = async (username, email, password) => {\n  try {\n    const response = await axios.post(`${API_URL}/auth/register`, {\n      username,\n      email,\n      password\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error('Registration failed');\n  }\n};\n\n// Function to logout user\nexport const logoutUser = async () => {\n  try {\n    await axios.post(`${API_URL}/auth/logout`);\n  } catch (error) {\n    throw new Error('Logout failed');\n  }\n};\n\n// Function to fetch movies\nexport const fetchMovies = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/movies`);\n    return response.data;\n  } catch (error) {\n    throw new Error('Fetching movies failed');\n  }\n};\n\n// Function to search movies\nexport const searchMovies = async query => {\n  try {\n    const response = await axios.get(`${API_URL}/movies/search`, {\n      params: {\n        query\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error('Search failed');\n  }\n};","map":{"version":3,"names":["axios","API_URL","loginUser","email","password","response","post","data","error","Error","registerUser","username","logoutUser","fetchMovies","get","searchMovies","query","params"],"sources":["C:/Users/pramo/Desktop/netflix/netflix-clone/src/api.js"],"sourcesContent":["// src/api.js\r\n\r\nimport axios from 'axios';\r\n\r\n// Set your backend URL here\r\nconst API_URL = 'http://localhost:5000/api'; // Replace with your actual API URL\r\n\r\n// Function to login user\r\nexport const loginUser = async (email, password) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/auth/login`, { email, password });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error('Login failed');\r\n  }\r\n};\r\n\r\n// Function to register user\r\nexport const registerUser = async (username, email, password) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/auth/register`, { username, email, password });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error('Registration failed');\r\n  }\r\n};\r\n\r\n// Function to logout user\r\nexport const logoutUser = async () => {\r\n  try {\r\n    await axios.post(`${API_URL}/auth/logout`);\r\n  } catch (error) {\r\n    throw new Error('Logout failed');\r\n  }\r\n};\r\n\r\n// Function to fetch movies\r\nexport const fetchMovies = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/movies`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error('Fetching movies failed');\r\n  }\r\n};\r\n\r\n// Function to search movies\r\nexport const searchMovies = async (query) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/movies/search`, { params: { query } });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error('Search failed');\r\n  }\r\n};\r\n"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,OAAO,GAAG,2BAA2B,CAAC,CAAC;;AAE7C;AACA,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EAClD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,GAAGL,OAAO,aAAa,EAAE;MAAEE,KAAK;MAAEC;IAAS,CAAC,CAAC;IAC/E,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,cAAc,CAAC;EACjC;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAOC,QAAQ,EAAER,KAAK,EAAEC,QAAQ,KAAK;EAC/D,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,GAAGL,OAAO,gBAAgB,EAAE;MAAEU,QAAQ;MAAER,KAAK;MAAEC;IAAS,CAAC,CAAC;IAC5F,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;EACxC;AACF,CAAC;;AAED;AACA,OAAO,MAAMG,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACF,MAAMZ,KAAK,CAACM,IAAI,CAAC,GAAGL,OAAO,cAAc,CAAC;EAC5C,CAAC,CAAC,OAAOO,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;EAClC;AACF,CAAC;;AAED;AACA,OAAO,MAAMI,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAML,KAAK,CAACc,GAAG,CAAC,GAAGb,OAAO,SAAS,CAAC;IACrD,OAAOI,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;EAC3C;AACF,CAAC;;AAED;AACA,OAAO,MAAMM,YAAY,GAAG,MAAOC,KAAK,IAAK;EAC3C,IAAI;IACF,MAAMX,QAAQ,GAAG,MAAML,KAAK,CAACc,GAAG,CAAC,GAAGb,OAAO,gBAAgB,EAAE;MAAEgB,MAAM,EAAE;QAAED;MAAM;IAAE,CAAC,CAAC;IACnF,OAAOX,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;EAClC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}