{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pramo\\\\Desktop\\\\netflix\\\\netflix-clone\\\\src\\\\components\\\\LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { loginUser } from \"../api\"; // Ensure correct API path\nimport \"./LoginForm.css\"; // Import CSS for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = ({\n  onLoginSuccess\n}) => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setErrorMessage(\"\"); // Clear any previous error messages\n\n    try {\n      // Send email and password to the login API\n      await loginUser({\n        email,\n        password\n      });\n      console.log(\"Login successful\");\n      onLoginSuccess(); // Trigger callback function on success\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Login failed:\", error.message);\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Invalid credentials. Please try again.\";\n      setErrorMessage(message); // Set error message for the user\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"login-form\",\n    children: [errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      placeholder: \"Email\",\n      className: \"input-field\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      placeholder: \"Password\",\n      className: \"input-field\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"submit-btn\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"vfrh8iV8x/SibBoveL5wUhYKhjU=\");\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","loginUser","jsxDEV","_jsxDEV","LoginForm","onLoginSuccess","_s","email","setEmail","password","setPassword","errorMessage","setErrorMessage","handleSubmit","e","preventDefault","console","log","error","_error$response","_error$response$data","message","response","data","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/pramo/Desktop/netflix/netflix-clone/src/components/LoginForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { loginUser } from \"../api\"; // Ensure correct API path\r\nimport \"./LoginForm.css\"; // Import CSS for styling\r\n\r\nconst LoginForm = ({ onLoginSuccess }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setErrorMessage(\"\"); // Clear any previous error messages\r\n\r\n    try {\r\n      // Send email and password to the login API\r\n      await loginUser({ email, password });\r\n      console.log(\"Login successful\");\r\n      onLoginSuccess(); // Trigger callback function on success\r\n    } catch (error) {\r\n      console.error(\"Login failed:\", error.message);\r\n      const message =\r\n        error.response?.data?.message || \"Invalid credentials. Please try again.\";\r\n      setErrorMessage(message); // Set error message for the user\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"login-form\">\r\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n      <input\r\n        type=\"email\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n        placeholder=\"Email\"\r\n        className=\"input-field\"\r\n        required\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        placeholder=\"Password\"\r\n        className=\"input-field\"\r\n        required\r\n      />\r\n      <button type=\"submit\" className=\"submit-btn\">\r\n        Login\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,QAAQ,CAAC,CAAC;AACpC,OAAO,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMa,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBH,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC;;IAErB,IAAI;MACF;MACA,MAAMX,SAAS,CAAC;QAAEM,KAAK;QAAEE;MAAS,CAAC,CAAC;MACpCO,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;MAC/BZ,cAAc,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,OAAOa,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,oBAAA;MACdJ,OAAO,CAACE,KAAK,CAAC,eAAe,EAAEA,KAAK,CAACG,OAAO,CAAC;MAC7C,MAAMA,OAAO,GACX,EAAAF,eAAA,GAAAD,KAAK,CAACI,QAAQ,cAAAH,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBI,IAAI,cAAAH,oBAAA,uBAApBA,oBAAA,CAAsBC,OAAO,KAAI,wCAAwC;MAC3ET,eAAe,CAACS,OAAO,CAAC,CAAC,CAAC;IAC5B;EACF,CAAC;EAED,oBACElB,OAAA;IAAMqB,QAAQ,EAAEX,YAAa;IAACY,SAAS,EAAC,YAAY;IAAAC,QAAA,GACjDf,YAAY,iBAAIR,OAAA;MAAGsB,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEf;IAAY;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChE3B,OAAA;MACE4B,IAAI,EAAC,OAAO;MACZC,KAAK,EAAEzB,KAAM;MACb0B,QAAQ,EAAGnB,CAAC,IAAKN,QAAQ,CAACM,CAAC,CAACoB,MAAM,CAACF,KAAK,CAAE;MAC1CG,WAAW,EAAC,OAAO;MACnBV,SAAS,EAAC,aAAa;MACvBW,QAAQ;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF3B,OAAA;MACE4B,IAAI,EAAC,UAAU;MACfC,KAAK,EAAEvB,QAAS;MAChBwB,QAAQ,EAAGnB,CAAC,IAAKJ,WAAW,CAACI,CAAC,CAACoB,MAAM,CAACF,KAAK,CAAE;MAC7CG,WAAW,EAAC,UAAU;MACtBV,SAAS,EAAC,aAAa;MACvBW,QAAQ;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF3B,OAAA;MAAQ4B,IAAI,EAAC,QAAQ;MAACN,SAAS,EAAC,YAAY;MAAAC,QAAA,EAAC;IAE7C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX,CAAC;AAACxB,EAAA,CA9CIF,SAAS;AAAAiC,EAAA,GAATjC,SAAS;AAgDf,eAAeA,SAAS;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}