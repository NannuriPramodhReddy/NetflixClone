{"ast":null,"code":"// src/api.js\n\nimport axios from 'axios';\n\n// Define the base URL for your API\nconst BASE_URL = 'http://localhost:5000/api';\n\n// Create an Axios instance with default configurations\nconst api = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Fetch all movies\nexport const fetchMovies = async () => {\n  try {\n    const response = await api.get('/movies');\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching movies\", error);\n    throw error;\n  }\n};\n\n// Search movies by title\nexport const searchMovies = async query => {\n  try {\n    const response = await api.get(`/movies/search?query=${query}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error searching movies\", error);\n    throw error;\n  }\n};\n\n// Fetch a single movie by ID\nexport const fetchMovieById = async id => {\n  try {\n    const response = await api.get(`/movies/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching movie by ID\", error);\n    throw error;\n  }\n};\n\n// Register a new user\nexport const registerUser = async userData => {\n  try {\n    const response = await api.post('http://localhost:5000/api/auth/register', userData);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error registering user\", error);\n    throw error;\n  }\n};\n\n// Log in an existing user\nexport const loginUser = async credentials => {\n  try {\n    const response = await api.post('http://localhost:5000/api/auth/login', credentials);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error logging in\", error);\n    throw error;\n  }\n};\n\n// Example function to log out (if applicable)\nexport const logoutUser = async () => {\n  try {\n    const response = await api.post('/auth/logout');\n    return response.data;\n  } catch (error) {\n    console.error(\"Error logging out\", error);\n    throw error;\n  }\n};\n\n// Group API functions together for easier import\nexport default {\n  fetchMovies,\n  searchMovies,\n  fetchMovieById,\n  registerUser,\n  loginUser,\n  logoutUser\n};","map":{"version":3,"names":["axios","BASE_URL","api","create","baseURL","headers","fetchMovies","response","get","data","error","console","searchMovies","query","fetchMovieById","id","registerUser","userData","post","loginUser","credentials","logoutUser"],"sources":["C:/Users/pramo/Desktop/netflix/netflix-clone/src/api.js"],"sourcesContent":["// src/api.js\r\n\r\nimport axios from 'axios';\r\n\r\n// Define the base URL for your API\r\nconst BASE_URL = 'http://localhost:5000/api';\r\n\r\n// Create an Axios instance with default configurations\r\nconst api = axios.create({\r\n  baseURL: BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Fetch all movies\r\nexport const fetchMovies = async () => {\r\n  try {\r\n    const response = await api.get('/movies');\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching movies\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Search movies by title\r\nexport const searchMovies = async (query) => {\r\n  try {\r\n    const response = await api.get(`/movies/search?query=${query}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error searching movies\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Fetch a single movie by ID\r\nexport const fetchMovieById = async (id) => {\r\n  try {\r\n    const response = await api.get(`/movies/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching movie by ID\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Register a new user\r\nexport const registerUser = async (userData) => {\r\n  try {\r\n    const response = await api.post('http://localhost:5000/api/auth/register', userData);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error registering user\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Log in an existing user\r\nexport const loginUser = async (credentials) => {\r\n  try {\r\n    const response = await api.post('http://localhost:5000/api/auth/login', credentials);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error logging in\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Example function to log out (if applicable)\r\nexport const logoutUser = async () => {\r\n  try {\r\n    const response = await api.post('/auth/logout');\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error logging out\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Group API functions together for easier import\r\nexport default {\r\n  fetchMovies,\r\n  searchMovies,\r\n  fetchMovieById,\r\n  registerUser,\r\n  loginUser,\r\n  logoutUser,\r\n};\r\n"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,QAAQ,GAAG,2BAA2B;;AAE5C;AACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,QAAQ;EACjBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,SAAS,CAAC;IACzC,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,YAAY,GAAG,MAAOC,KAAK,IAAK;EAC3C,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,wBAAwBK,KAAK,EAAE,CAAC;IAC/D,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMI,cAAc,GAAG,MAAOC,EAAE,IAAK;EAC1C,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,WAAWO,EAAE,EAAE,CAAC;IAC/C,OAAOR,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMM,YAAY,GAAG,MAAOC,QAAQ,IAAK;EAC9C,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAML,GAAG,CAACgB,IAAI,CAAC,yCAAyC,EAAED,QAAQ,CAAC;IACpF,OAAOV,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMS,SAAS,GAAG,MAAOC,WAAW,IAAK;EAC9C,IAAI;IACF,MAAMb,QAAQ,GAAG,MAAML,GAAG,CAACgB,IAAI,CAAC,sCAAsC,EAAEE,WAAW,CAAC;IACpF,OAAOb,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IACxC,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMW,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACF,MAAMd,QAAQ,GAAG,MAAML,GAAG,CAACgB,IAAI,CAAC,cAAc,CAAC;IAC/C,OAAOX,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IACzC,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,eAAe;EACbJ,WAAW;EACXM,YAAY;EACZE,cAAc;EACdE,YAAY;EACZG,SAAS;EACTE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}