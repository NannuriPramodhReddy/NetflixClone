{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pramo\\\\Desktop\\\\netflix\\\\netflix-clone\\\\src\\\\pages\\\\MovieDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieDetails = () => {\n  _s();\n  const [movie, setMovie] = useState(null);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/movies/${id}`);\n        setMovie(response.data);\n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n      }\n    };\n    fetchMovieDetails();\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: movie ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: movie.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: movie.imageUrl,\n        alt: movie.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: movie.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Release Year:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 14\n        }, this), \" \", movie.releaseYear]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading movie details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieDetails, \"g8iu1ZIGRaf/NCTTZ2aKV+/5tDw=\", false, function () {\n  return [useParams];\n});\n_c = MovieDetails;\nexport default MovieDetails;\nvar _c;\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","jsxDEV","_jsxDEV","MovieDetails","_s","movie","setMovie","id","fetchMovieDetails","response","get","data","error","console","children","title","fileName","_jsxFileName","lineNumber","columnNumber","src","imageUrl","alt","description","releaseYear","_c","$RefreshReg$"],"sources":["C:/Users/pramo/Desktop/netflix/netflix-clone/src/pages/MovieDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst MovieDetails = () => {\r\n  const [movie, setMovie] = useState(null);\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    const fetchMovieDetails = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/movies/${id}`);\r\n        setMovie(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching movie details:', error);\r\n      }\r\n    };\r\n\r\n    fetchMovieDetails();\r\n  }, [id]);\r\n\r\n  return (\r\n    <div>\r\n      {movie ? (\r\n        <div>\r\n          <h1>{movie.title}</h1>\r\n          <img src={movie.imageUrl} alt={movie.title} />\r\n          <p>{movie.description}</p>\r\n          <p><strong>Release Year:</strong> {movie.releaseYear}</p>\r\n        </div>\r\n      ) : (\r\n        <p>Loading movie details...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM;IAAEU;EAAG,CAAC,GAAGP,SAAS,CAAC,CAAC;EAE1BF,SAAS,CAAC,MAAM;IACd,MAAMU,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,oCAAoCH,EAAE,EAAE,CAAC;QAC1ED,QAAQ,CAACG,QAAQ,CAACE,IAAI,CAAC;MACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;IAEDJ,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,CAACD,EAAE,CAAC,CAAC;EAER,oBACEL,OAAA;IAAAY,QAAA,EACGT,KAAK,gBACJH,OAAA;MAAAY,QAAA,gBACEZ,OAAA;QAAAY,QAAA,EAAKT,KAAK,CAACU;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACtBjB,OAAA;QAAKkB,GAAG,EAAEf,KAAK,CAACgB,QAAS;QAACC,GAAG,EAAEjB,KAAK,CAACU;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9CjB,OAAA;QAAAY,QAAA,EAAIT,KAAK,CAACkB;MAAW;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1BjB,OAAA;QAAAY,QAAA,gBAAGZ,OAAA;UAAAY,QAAA,EAAQ;QAAa;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACd,KAAK,CAACmB,WAAW;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC,gBAENjB,OAAA;MAAAY,QAAA,EAAG;IAAwB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAC/B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACf,EAAA,CA/BID,YAAY;EAAA,QAEDH,SAAS;AAAA;AAAAyB,EAAA,GAFpBtB,YAAY;AAiClB,eAAeA,YAAY;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}