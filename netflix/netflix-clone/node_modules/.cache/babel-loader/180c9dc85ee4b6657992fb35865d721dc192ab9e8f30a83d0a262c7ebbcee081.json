{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pramo\\\\Desktop\\\\netflix\\\\netflix-clone\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\n// src/pages/Home.js\n\nimport React, { useState, useEffect } from 'react';\nimport MovieList from '../components/MovieList';\nimport SearchForm from '../components/SearchForm';\nimport { fetchMovies } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [searchResults, setSearchResults] = useState([]);\n\n  // Fetch movies on component mount\n  useEffect(() => {\n    const getMovies = async () => {\n      try {\n        const movieData = await fetchMovies();\n        setMovies(movieData);\n      } catch (error) {\n        console.error('Error fetching movies:', error.message);\n      }\n    };\n    getMovies();\n  }, []);\n\n  // Handle search results\n  const handleSearchResults = results => {\n    setSearchResults(results); // Set the search results when searching\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to Netflix Clone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchForm, {\n      onSearchResults: handleSearchResults\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), \"  \", /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieList, {\n      movies: searchResults.length ? searchResults : movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"EDH3icAYaljkzsf+fyuWNyvuOoY=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","MovieList","SearchForm","fetchMovies","jsxDEV","_jsxDEV","Home","_s","movies","setMovies","searchResults","setSearchResults","getMovies","movieData","error","console","message","handleSearchResults","results","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearchResults","length","_c","$RefreshReg$"],"sources":["C:/Users/pramo/Desktop/netflix/netflix-clone/src/pages/Home.js"],"sourcesContent":["// src/pages/Home.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport MovieList from '../components/MovieList';\r\nimport SearchForm from '../components/SearchForm';\r\nimport { fetchMovies } from '../api';\r\n\r\nconst Home = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [searchResults, setSearchResults] = useState([]);\r\n\r\n  // Fetch movies on component mount\r\n  useEffect(() => {\r\n    const getMovies = async () => {\r\n      try {\r\n        const movieData = await fetchMovies();\r\n        setMovies(movieData);\r\n      } catch (error) {\r\n        console.error('Error fetching movies:', error.message);\r\n      }\r\n    };\r\n\r\n    getMovies();\r\n  }, []);\r\n\r\n  // Handle search results\r\n  const handleSearchResults = (results) => {\r\n    setSearchResults(results);  // Set the search results when searching\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Welcome to Netflix Clone</h1>\r\n      <SearchForm onSearchResults={handleSearchResults} />  {/* Pass handler to SearchForm */}\r\n      <h2>Movies</h2>\r\n      {/* Display search results if available, otherwise show all movies */}\r\n      <MovieList movies={searchResults.length ? searchResults : movies} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,WAAW,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;;EAEtD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,SAAS,GAAG,MAAMV,WAAW,CAAC,CAAC;QACrCM,SAAS,CAACI,SAAS,CAAC;MACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAACE,OAAO,CAAC;MACxD;IACF,CAAC;IAEDJ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMK,mBAAmB,GAAIC,OAAO,IAAK;IACvCP,gBAAgB,CAACO,OAAO,CAAC,CAAC,CAAE;EAC9B,CAAC;EAED,oBACEb,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjClB,OAAA,CAACH,UAAU;MAACsB,eAAe,EAAEP;IAAoB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,MAAE,eACtDlB,OAAA;MAAAc,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEflB,OAAA,CAACJ,SAAS;MAACO,MAAM,EAAEE,aAAa,CAACe,MAAM,GAAGf,aAAa,GAAGF;IAAO;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjE,CAAC;AAEV,CAAC;AAAChB,EAAA,CAhCID,IAAI;AAAAoB,EAAA,GAAJpB,IAAI;AAkCV,eAAeA,IAAI;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}