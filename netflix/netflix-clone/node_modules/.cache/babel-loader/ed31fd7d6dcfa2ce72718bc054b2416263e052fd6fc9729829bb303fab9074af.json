{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pramo\\\\Desktop\\\\netflix\\\\netflix-clone\\\\src\\\\pages\\\\MovieDetails.js\";\n// src/components/MovieList.js\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieList = ({\n  movies\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: movies && movies.length > 0 ? movies.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 15\n        }, this), \"  \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Genre: \", movie.genre]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Year: \", movie.year]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 15\n        }, this)]\n      }, movie._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No movies found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","MovieList","movies","children","length","map","movie","title","fileName","_jsxFileName","lineNumber","columnNumber","genre","year","_id","_c","$RefreshReg$"],"sources":["C:/Users/pramo/Desktop/netflix/netflix-clone/src/pages/MovieDetails.js"],"sourcesContent":["// src/components/MovieList.js\r\n\r\nimport React from 'react';\r\n\r\nconst MovieList = ({ movies }) => {\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {movies && movies.length > 0 ? (\r\n          movies.map((movie) => (\r\n            <li key={movie._id}>\r\n              <h3>{movie.title}</h3>  {/* Display movie title */}\r\n              <p>Genre: {movie.genre}</p>\r\n              <p>Year: {movie.year}</p>\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <p>No movies found</p>  \r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAChC,oBACEF,OAAA;IAAAG,QAAA,eACEH,OAAA;MAAAG,QAAA,EACGD,MAAM,IAAIA,MAAM,CAACE,MAAM,GAAG,CAAC,GAC1BF,MAAM,CAACG,GAAG,CAAEC,KAAK,iBACfN,OAAA;QAAAG,QAAA,gBACEH,OAAA;UAAAG,QAAA,EAAKG,KAAK,CAACC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,MAAE,eACxBX,OAAA;UAAAG,QAAA,GAAG,SAAO,EAACG,KAAK,CAACM,KAAK;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC3BX,OAAA;UAAAG,QAAA,GAAG,QAAM,EAACG,KAAK,CAACO,IAAI;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAHlBL,KAAK,CAACQ,GAAG;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAId,CACL,CAAC,gBAEFX,OAAA;QAAAG,QAAA,EAAG;MAAe;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACtB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACI,EAAA,GAlBId,SAAS;AAoBf,eAAeA,SAAS;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}