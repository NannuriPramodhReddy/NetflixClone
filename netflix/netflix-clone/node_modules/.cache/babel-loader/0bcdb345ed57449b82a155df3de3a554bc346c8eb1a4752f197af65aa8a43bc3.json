{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pramo\\\\Desktop\\\\netflix\\\\netflix-clone\\\\src\\\\components\\\\MovieList.js\",\n  _s = $RefreshSig$();\n// src/components/MovieList.js\n\nimport React, { useState, useEffect } from 'react';\nimport { fetchMovies } from '../api'; // Import the fetchMovies function from api.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieList = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    const getMovies = async () => {\n      try {\n        // Call the fetchMovies function from api.js to get movie data\n        const movieData = await fetchMovies();\n        setMovies(movieData); // Set the movies in the state\n      } catch (error) {\n        console.error('Error fetching movies:', error.message);\n      }\n    };\n    getMovies(); // Fetch movies on component mount\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Movie List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), movies.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No movies available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [movie.title, \" - \", movie.genre, \" (\", movie.year, \")\"]\n      }, movie._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieList, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useState","useEffect","fetchMovies","jsxDEV","_jsxDEV","MovieList","_s","movies","setMovies","getMovies","movieData","error","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","movie","title","genre","year","_id","_c","$RefreshReg$"],"sources":["C:/Users/pramo/Desktop/netflix/netflix-clone/src/components/MovieList.js"],"sourcesContent":["// src/components/MovieList.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { fetchMovies } from '../api';  // Import the fetchMovies function from api.js\r\n\r\nconst MovieList = () => {\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getMovies = async () => {\r\n      try {\r\n        // Call the fetchMovies function from api.js to get movie data\r\n        const movieData = await fetchMovies();\r\n        setMovies(movieData);  // Set the movies in the state\r\n      } catch (error) {\r\n        console.error('Error fetching movies:', error.message);\r\n      }\r\n    };\r\n\r\n    getMovies();  // Fetch movies on component mount\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Movie List</h2>\r\n      {movies.length === 0 ? (\r\n        <p>No movies available.</p>\r\n      ) : (\r\n        <ul>\r\n          {movies.map((movie) => (\r\n            <li key={movie._id}>\r\n              {movie.title} - {movie.genre} ({movie.year})\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,QAAQ,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF;QACA,MAAMC,SAAS,GAAG,MAAMR,WAAW,CAAC,CAAC;QACrCM,SAAS,CAACE,SAAS,CAAC,CAAC,CAAE;MACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAACE,OAAO,CAAC;MACxD;IACF,CAAC;IAEDJ,SAAS,CAAC,CAAC,CAAC,CAAE;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAClBX,MAAM,CAACY,MAAM,KAAK,CAAC,gBAClBf,OAAA;MAAAU,QAAA,EAAG;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAE3Bd,OAAA;MAAAU,QAAA,EACGP,MAAM,CAACa,GAAG,CAAEC,KAAK,iBAChBjB,OAAA;QAAAU,QAAA,GACGO,KAAK,CAACC,KAAK,EAAC,KAAG,EAACD,KAAK,CAACE,KAAK,EAAC,IAAE,EAACF,KAAK,CAACG,IAAI,EAAC,GAC7C;MAAA,GAFSH,KAAK,CAACI,GAAG;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEd,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACZ,EAAA,CAjCID,SAAS;AAAAqB,EAAA,GAATrB,SAAS;AAmCf,eAAeA,SAAS;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}