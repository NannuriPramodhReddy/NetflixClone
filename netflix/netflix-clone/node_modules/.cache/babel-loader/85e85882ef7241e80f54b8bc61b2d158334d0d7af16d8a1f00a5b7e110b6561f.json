{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pramo\\\\Desktop\\\\netflix\\\\netflix-clone\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Home from './pages/Home';\nimport LoginPage from './pages/LoginPage';\nimport RegisterPage from './pages/RegisterPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const handleLoginSuccess = () => {\n    setIsAuthenticated(true);\n  };\n  const handleLogout = async () => {\n    try {\n      await logoutUser();\n      setIsAuthenticated(false);\n    } catch (error) {\n      console.error('Logout failed', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      isAuthenticated: isAuthenticated,\n      onLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        children: /*#__PURE__*/_jsxDEV(LoginPage, {\n          onLoginSuccess: handleLoginSuccess\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        children: /*#__PURE__*/_jsxDEV(RegisterPage, {\n          onRegisterSuccess: handleLoginSuccess\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"BT2f1XiqCgFHwobQTWR7kond0Ig=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Switch","Navbar","Home","LoginPage","RegisterPage","jsxDEV","_jsxDEV","App","_s","isAuthenticated","setIsAuthenticated","handleLoginSuccess","handleLogout","logoutUser","error","console","children","onLogout","fileName","_jsxFileName","lineNumber","columnNumber","path","onLoginSuccess","onRegisterSuccess","exact","_c","$RefreshReg$"],"sources":["C:/Users/pramo/Desktop/netflix/netflix-clone/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Home from './pages/Home';\nimport LoginPage from './pages/LoginPage';\nimport RegisterPage from './pages/RegisterPage';\n\nconst App = () => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  const handleLoginSuccess = () => {\n    setIsAuthenticated(true);\n  };\n\n  const handleLogout = async () => {\n    try {\n      await logoutUser();\n      setIsAuthenticated(false);\n    } catch (error) {\n      console.error('Logout failed', error);\n    }\n  };\n\n  return (\n    <Router>\n      <Navbar isAuthenticated={isAuthenticated} onLogout={handleLogout} />\n      <Switch>\n        <Route path=\"/login\">\n          <LoginPage onLoginSuccess={handleLoginSuccess} />\n        </Route>\n        <Route path=\"/register\">\n          <RegisterPage onRegisterSuccess={handleLoginSuccess} />\n        </Route>\n        <Route path=\"/\" exact>\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,YAAY,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMe,kBAAkB,GAAGA,CAAA,KAAM;IAC/BD,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,MAAME,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMC,UAAU,CAAC,CAAC;MAClBH,kBAAkB,CAAC,KAAK,CAAC;IAC3B,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACvC;EACF,CAAC;EAED,oBACER,OAAA,CAACR,MAAM;IAAAkB,QAAA,gBACLV,OAAA,CAACL,MAAM;MAACQ,eAAe,EAAEA,eAAgB;MAACQ,QAAQ,EAAEL;IAAa;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpEf,OAAA,CAACN,MAAM;MAAAgB,QAAA,gBACLV,OAAA,CAACP,KAAK;QAACuB,IAAI,EAAC,QAAQ;QAAAN,QAAA,eAClBV,OAAA,CAACH,SAAS;UAACoB,cAAc,EAAEZ;QAAmB;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC,eACRf,OAAA,CAACP,KAAK;QAACuB,IAAI,EAAC,WAAW;QAAAN,QAAA,eACrBV,OAAA,CAACF,YAAY;UAACoB,iBAAiB,EAAEb;QAAmB;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC,eACRf,OAAA,CAACP,KAAK;QAACuB,IAAI,EAAC,GAAG;QAACG,KAAK;QAAAT,QAAA,eACnBV,OAAA,CAACJ,IAAI;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb,CAAC;AAACb,EAAA,CAhCID,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AAkCT,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}