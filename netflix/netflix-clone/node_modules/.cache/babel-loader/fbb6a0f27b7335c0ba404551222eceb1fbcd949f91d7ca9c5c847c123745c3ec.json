{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pramo\\\\Desktop\\\\netflix\\\\netflix-clone\\\\src\\\\components\\\\SearchForm.js\",\n  _s = $RefreshSig$();\n// src/components/SearchForm.js\n\nimport React, { useState } from 'react';\nimport { searchMovies } from '../api'; // Import the searchMovies function from api.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchForm = ({\n  onSearchResults\n}) => {\n  _s();\n  const [query, setQuery] = useState(''); // Query state to hold the search input\n\n  // This handles the form submission\n  const handleSubmit = async e => {\n    e.preventDefault(); // Prevent the default form submission behavior\n\n    if (!query.trim()) {\n      console.log('Please enter a search query');\n      return; // If the query is empty, don't perform the search\n    }\n    try {\n      console.log('Searching for:', query); // Log the query for debugging\n      const searchResults = await searchMovies(query); // Make the API call\n      console.log('Search Results:', searchResults); // Log the results for debugging\n      onSearchResults(searchResults); // Trigger the parent component's search results handler\n    } catch (error) {\n      console.error('Search failed:', error.message); // Log any errors\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: query,\n      onChange: e => setQuery(e.target.value) // Update the query state as the user types\n      ,\n      placeholder: \"Search for movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchForm, \"qO/HZodsWTfJhuzZtdaxiosei2U=\");\n_c = SearchForm;\nexport default SearchForm;\nvar _c;\n$RefreshReg$(_c, \"SearchForm\");","map":{"version":3,"names":["React","useState","searchMovies","jsxDEV","_jsxDEV","SearchForm","onSearchResults","_s","query","setQuery","handleSubmit","e","preventDefault","trim","console","log","searchResults","error","message","onSubmit","children","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/pramo/Desktop/netflix/netflix-clone/src/components/SearchForm.js"],"sourcesContent":["// src/components/SearchForm.js\r\n\r\nimport React, { useState } from 'react';\r\nimport { searchMovies } from '../api';  // Import the searchMovies function from api.js\r\n\r\nconst SearchForm = ({ onSearchResults }) => {\r\n  const [query, setQuery] = useState('');  // Query state to hold the search input\r\n\r\n  // This handles the form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();  // Prevent the default form submission behavior\r\n\r\n    if (!query.trim()) {\r\n      console.log('Please enter a search query');\r\n      return; // If the query is empty, don't perform the search\r\n    }\r\n\r\n    try {\r\n      console.log('Searching for:', query);  // Log the query for debugging\r\n      const searchResults = await searchMovies(query);  // Make the API call\r\n      console.log('Search Results:', searchResults);  // Log the results for debugging\r\n      onSearchResults(searchResults);  // Trigger the parent component's search results handler\r\n    } catch (error) {\r\n      console.error('Search failed:', error.message);  // Log any errors\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={query}\r\n        onChange={(e) => setQuery(e.target.value)}  // Update the query state as the user types\r\n        placeholder=\"Search for movies\"\r\n      />\r\n      <button type=\"submit\">Search</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,QAAQ,QAAQ,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;;EAEzC;EACA,MAAMS,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAAC,CAAE;;IAErB,IAAI,CAACJ,KAAK,CAACK,IAAI,CAAC,CAAC,EAAE;MACjBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;MAC1C,OAAO,CAAC;IACV;IAEA,IAAI;MACFD,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEP,KAAK,CAAC,CAAC,CAAE;MACvC,MAAMQ,aAAa,GAAG,MAAMd,YAAY,CAACM,KAAK,CAAC,CAAC,CAAE;MAClDM,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEC,aAAa,CAAC,CAAC,CAAE;MAChDV,eAAe,CAACU,aAAa,CAAC,CAAC,CAAE;IACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAACC,OAAO,CAAC,CAAC,CAAE;IACnD;EACF,CAAC;EAED,oBACEd,OAAA;IAAMe,QAAQ,EAAET,YAAa;IAAAU,QAAA,gBAC3BhB,OAAA;MACEiB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEd,KAAM;MACbe,QAAQ,EAAGZ,CAAC,IAAKF,QAAQ,CAACE,CAAC,CAACa,MAAM,CAACF,KAAK,CAAE,CAAE;MAAA;MAC5CG,WAAW,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACFzB,OAAA;MAAQiB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEX,CAAC;AAACtB,EAAA,CAjCIF,UAAU;AAAAyB,EAAA,GAAVzB,UAAU;AAmChB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}