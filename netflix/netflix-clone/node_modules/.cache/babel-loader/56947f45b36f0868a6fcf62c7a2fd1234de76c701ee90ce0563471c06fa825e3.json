{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pramo\\\\Desktop\\\\netflix\\\\netflix-clone\\\\src\\\\pages\\\\MovieDetails.js\",\n  _s = $RefreshSig$();\n// src/pages/MovieDetails.js\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieById } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Get the movie ID from URL params\n  const [movie, setMovie] = useState(null);\n  useEffect(() => {\n    const getMovieDetails = async () => {\n      try {\n        const movieData = await fetchMovieById(id);\n        setMovie(movieData);\n      } catch (error) {\n        console.error('Error fetching movie details:', error.message);\n      }\n    };\n    getMovieDetails(); // Fetch movie details on component mount\n  }, [id]);\n  if (!movie) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: movie.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Genre: \", movie.genre]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Year: \", movie.year]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: movie.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieDetails, \"2DI+WM1NP8orkt5lpnG0LvHIzCE=\", false, function () {\n  return [useParams];\n});\n_c = MovieDetails;\nexport default MovieDetails;\nvar _c;\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"names":["React","useState","useEffect","useParams","fetchMovieById","jsxDEV","_jsxDEV","MovieDetails","_s","id","movie","setMovie","getMovieDetails","movieData","error","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","title","genre","year","description","_c","$RefreshReg$"],"sources":["C:/Users/pramo/Desktop/netflix/netflix-clone/src/pages/MovieDetails.js"],"sourcesContent":["// src/pages/MovieDetails.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchMovieById } from '../api';\r\n\r\nconst MovieDetails = () => {\r\n  const { id } = useParams();  // Get the movie ID from URL params\r\n  const [movie, setMovie] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const getMovieDetails = async () => {\r\n      try {\r\n        const movieData = await fetchMovieById(id);\r\n        setMovie(movieData);\r\n      } catch (error) {\r\n        console.error('Error fetching movie details:', error.message);\r\n      }\r\n    };\r\n\r\n    getMovieDetails();  // Fetch movie details on component mount\r\n  }, [id]);\r\n\r\n  if (!movie) return <p>Loading...</p>;\r\n\r\n  return (\r\n    <div>\r\n      <h1>{movie.title}</h1>\r\n      <p>Genre: {movie.genre}</p>\r\n      <p>Year: {movie.year}</p>\r\n      <p>{movie.description}</p> {/* Assuming a description field in movie data */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,cAAc,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC,CAAC,CAAE;EAC7B,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMU,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMC,SAAS,GAAG,MAAMT,cAAc,CAACK,EAAE,CAAC;QAC1CE,QAAQ,CAACE,SAAS,CAAC;MACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAACE,OAAO,CAAC;MAC/D;IACF,CAAC;IAEDJ,eAAe,CAAC,CAAC,CAAC,CAAE;EACtB,CAAC,EAAE,CAACH,EAAE,CAAC,CAAC;EAER,IAAI,CAACC,KAAK,EAAE,oBAAOJ,OAAA;IAAAW,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAEpC,oBACEf,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAKP,KAAK,CAACY;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtBf,OAAA;MAAAW,QAAA,GAAG,SAAO,EAACP,KAAK,CAACa,KAAK;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3Bf,OAAA;MAAAW,QAAA,GAAG,QAAM,EAACP,KAAK,CAACc,IAAI;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBf,OAAA;MAAAW,QAAA,EAAIP,KAAK,CAACe;IAAW;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,KAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEV,CAAC;AAACb,EAAA,CA3BID,YAAY;EAAA,QACDJ,SAAS;AAAA;AAAAuB,EAAA,GADpBnB,YAAY;AA6BlB,eAAeA,YAAY;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}